import axios from "axios";

export const get = async (url) => {
   axios.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest";
   return await axios.get(url);
};

export const notification = (status, msg_response) => {
   let toastr = window.toastr;
   toastr.options = {
      closeButton: true,
      debug: false,
      newestOnTop: true,
      progressBar: false,
      positionClass: "toast-top-right",
      preventDuplicates: false,
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "5000",
      extendedTimeOut: "1000",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "fadeOut",
   };
   toastr[status ? "success" : "error"](msg_response);
};

export const error_code_http = (code) => {
   const config = {
      100: "Continue",
      101: "Switching Protocols",
      102: "Processing",
      103: "Early Hints",
      122: "Request-URI too long",
      127: "Network Authentication Required",
      150: "Continue",
      151: "Switching Protocols",
      152: "Processing",
      153: "Early Hints",
      158: "Request-URI too long",
      159: "Network Authentication Required",
      180: "Continue",
      181: "Switching Protocols",
      182: "Processing",
      183: "Early Hints",
      188: "Request-URI too long",
      189: "Network Authentication Required",
      199: "Network Authentication Required",
      200: "OK",
      201: "Created",
      203: "Non-Authoritative Information",
      204: "No Content",
      205: "Reset Content",
      206: "Partial Content",
      207: "Multi-Status",
      208: "Already Reported",
      226: "IM Used",
      250: "Continue",
      251: "Switching Protocols",
      252: "Processing",
      253: "Early Hints",
      258: "Request-URI too long",
      259: "Network Authentication Required",
      299: "Network Authentication Required",
      300: "Multiple Choices",
      301: "Moved Permanently",
      302: "Found",
      303: "See Other",
      304: "Not Modified",
      305: "Use Proxy",
      307: "Temporary Redirect",
      308: "Permanent Redirect",
      310: "Too many Redirect",
      399: "Client Closed Request",
      400: "Bad Request",
      401: "Unauthorized",
      402: "Payment Required",
      403: "Forbidden",
      404: "Not Found",
      405: "Method Not Allowed",
      406: "Not Acceptable",
      407: "Proxy Authentication Required",
      408: "Request Timeout",
      409: "Conflict",
      410: "Gone",
      411: "Length Required",
      412: "Precondition Failed",
      413: "Payload Too Large",
      414: "URI Too Long",
      415: "Unsupported Media Type",
      416: "Range Not Satisfiable",
      417: "Expectation Failed",
      418: "I'm a teapot",
      421: "Misdirected Request",
      422: "Unprocessable Entity",
      423: "Locked",
      424: "Failed Dependency",
      426: "Upgrade Required",
      428: "Precondition Required",
      429: "Too Many Requests",
      431: "Request Header Fields Too Large",
      451: "Unavailable For Legal Reasons",
      499: "Client Closed Request",
      500: "Internal Server Error",
      501: "Not Implemented",
      502: "Bad Gateway",
      503: "Service Unavailable",
      504: "Gateway Timeout",
      505: "HTTP Version Not Supported",
      506: "Variant Also Negotiates",
      507: "Insufficient Storage",
      508: "Loop Detected",
      510: "Not Extended",
      511: "Network Authentication Required",
      599: "Network Authentication Required",
   };

   if (typeof config[code] !== "undefined") {
      return config[code];
   } else {
      return "Terjadi sesuatu kesalahan";
   }
};

export const animation_list = (key) => {
   const config = [
      "animated-section-moveFromRight",
      "animated-section-moveFromLeft",
      "animated-section-moveFromBottom",
      "animated-section-moveFromTop",
      "animated-section-moveFromRight animated-section-ontop",
      "animated-section-moveFromLeft animated-section-ontop",
      "animated-section-moveFromBottom animated-section-ontop",
      "animated-section-moveFromTop animated-section-ontop",
      "animated-section-moveFromRightFade",
      "animated-section-moveFromLeftFade",
      "animated-section-moveFromBottomFade",
      "animated-section-moveFromTopFade",
      "animated-section-moveFromRight animated-section-ontop",
      "animated-section-moveFromLeft animated-section-ontop",
      "animated-section-moveFromBottom animated-section-ontop",
      "animated-section-moveFromTop animated-section-ontop",
      "animated-section-scaleUpDown animated-section-delay300",
      "animated-section-scaleUp animated-section-delay300",
      "animated-section-scaleUp",
      "animated-section-scaleUpCenter animated-section-delay400",
      "animated-section-moveFromRight animated-section-delay200 animated-section-ontop",
      "animated-section-moveFromLeft animated-section-delay200 animated-section-ontop",
      "animated-section-moveFromTop animated-section-delay200 animated-section-ontop",
      "animated-section-moveFromBottom animated-section-delay200 animated-section-ontop",
      "animated-section-flipInLeft animated-section-delay500",
      "animated-section-flipInRight animated-section-delay500",
      "animated-section-flipInBottom animated-section-delay500",
      "animated-section-flipInTop animated-section-delay500",
      "animated-section-rotateInNewspaper animated-section-delay500",
      "animated-section-rotatePullRight animated-section-delay180",
      "animated-section-rotatePullLeft animated-section-delay180",
      "animated-section-rotatePullBottom animated-section-delay180",
      "animated-section-rotatePullTop animated-section-delay180",
      "animated-section-rotateUnfoldLeft",
      "animated-section-rotateUnfoldRight",
      "animated-section-rotateUnfoldTop",
      "animated-section-rotateUnfoldBottom",
      "animated-section-rotateRoomLeftIn",
      "animated-section-rotateRoomRightIn",
      "animated-section-rotateRoomTopIn",
      "animated-section-rotateRoomBottomIn",
      "animated-section-rotateCubeLeftIn",
      "animated-section-rotateCubeRightIn",
      "animated-section-rotateCubeTopIn",
      "animated-section-rotateCubeBottomIn",
      "animated-section-rotateCarouselLeftIn",
      "animated-section-rotateCarouselRightIn",
      "animated-section-rotateCarouselTopIn",
      "animated-section-rotateCarouselBottomIn",
      "animated-section-rotateSidesIn animated-section-delay200",
      "animated-section-rotateSlideIn",
   ];

   if (typeof config[key] !== "undefined") return config[key];
   else return config[0];
};
